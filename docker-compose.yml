version: "3"

services:
  api:
    build:
      context: .
      dockerfile: .docker/golang/Dockerfile
    image: ${API_NAME}
    container_name: ${API_NAME}
    environment:
      - CHANNEL_NAME=${API_CHANNEL_NAME}
      - BOT_OAUTH_TOKEN=${API_BOT_OAUTH_TOKEN}
      - BOT_USERNAME=${API_BOT_USERNAME}
      - IRC_URL=${API_IRC_URL}
      - IRC_PORT=${API_IRC_PORT}
      - PGSQL_HOST=${PGSQL_NAME}
      - REDIS_HOST=${REDIS_NAME}
      - KAFKA_URL=${KAFKA_NAME}
    depends_on:
      - postgres
      - redis
      - kafka
    ports:
      - "${API_PORT}:${API_PORT}"
  postgres:
    build:
      context: .
      dockerfile: .docker/postgres/Dockerfile
    image: ${PGSQL_NAME}
    container_name: ${PGSQL_NAME}
    environment:
      - PGDATA=${PGSQL_DATA}
      - POSTGRES_DB=${PGSQL_DBNAME}
      - POSTGRES_USER=${PGSQL_USER}
      - POSTGRES_PASSWORD=${PGSQL_PASSWORD}
    ports:
      - "${PGSQL_PORT}:${PGSQL_PORT}"
    volumes:
      - "${PGSQL_DATA}:${PGSQL_DATA}"
      - "./.docker/postgres/conf/pg_hba.conf:${PGSQL_DATA}/pg_hba.conf"
  redis:
    build:
      context: .
      dockerfile: .docker/redis/Dockerfile
    ports:
      - "${REDIS_PORT}:6379"
    image: ${REDIS_NAME}
    container_name: ${REDIS_NAME}
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: "${ZOOKEEPER_NAME}"
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: "${KAFKA_NAME}"
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    links:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "${ZOOKEEPER_SERVICE}:${ZOOKEEPER_PORT}"
      KAFKA_ADVERTISED_HOST_NAME: "${KAFKA_NAME}"
      KAFKA_ADVERTISED_PORT: "${KAFKA_PORT}"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
